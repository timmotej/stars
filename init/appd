#!/bin/bash
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

dir="/app"
cmd="uvicorn --reload --host $HOST --port $PORT --log-level $LOG_LEVEL $APP_MODULE"
user="$UNAME"

name=`basename $0`
pid_file="/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

sudo touch $pid_file $stderr_log $stdout_log
if [ -n "$user" ]; then
    sudo chown $user $pid_file $stderr_log $stdout_log
fi

log() {
    while read line; do
        echo "$(date +"[%Y-%m-%d]: %H:%M:%S,%3N") ${line}" >> $stdout_log
    done
}

get_pid() {
    cat "$pid_file"
}

## `ps -p` needs in alpine to have installed procps
is_running() {
    [[ -f "$pid_file" ]] && [[ -n $(cat "$pid_file") ]] && ps | grep $(get_pid) | grep -v grep > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        if [ -z "$user" ]; then
            sudo $cmd 2>&1 > >(log) &
        else
            $cmd 2>&1 > >(log) &
        fi
        echo $! | sudo tee "$pid_file"
        if ! is_running; then
            echo "Unable to start, see $stdout_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
	if [[ "$2" == "force" ]]; then
	    kill -9 `get_pid` $(pgrep -P `get_pid`)
	else
	    kill `get_pid` $(pgrep -P `get_pid`)
	fi
        for i in 1 2 3 4 5 6 7 8 9 10
        # for i in `seq 10`
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                sudo rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|stop force|restart|status}"
    exit 1
    ;;
esac

exec "/bin/bash"
#exit   0
